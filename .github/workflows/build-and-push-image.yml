name: Build and Push ECR Image

on:
  push:
    branches:
      - main
    paths:
      - 'ingestion/**'
      - 'transform/**'
  workflow_dispatch:

env:
    AWS_REGION: ap-northeast-1
    PROJECT_NAME: kf-data-lakehouse
    USECASES: '["ingestion", "transform"]'

permissions:
  id-token: write
  contents: read

jobs:
  prepare_matrix:
    runs-on: ubuntu-latest
    outputs:
      usecases: ${{ steps.generate_matrix.outputs.usecases }}
    steps:
      - name: Generate Matrix
        id: generate_matrix
        run: |
          usecases="$(echo ${{ toJson(env.USECASES) }} | jq -c '.')"
          echo "usecases=$usecases" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

  build_and_push:
    runs-on: ubuntu-latest
    needs:
      - prepare_matrix
    strategy:
      matrix:
        usecase: ${{ fromJson(needs.prepare_matrix.outputs.usecases) }}
    steps:
    - uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ env.AWS_REGION }}
        role-to-assume: arn:aws:iam::${{ secrets.DATA_LAKEHOUSE_AWS_ACCOUNT_ID }}:role/GitHubActionsDeployRole

    - name: Login to Amazon ECR
      id: login_ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login_ecr.outputs.registry }}
        ECR_REPOSITORY: "${{ env.PROJECT_NAME }}-${{ matrix.usecase }}-repo"
        IMAGE_TAG: ${{ github.sha }}
      working-directory: ${{ matrix.usecase }}
      run: |
        docker build -t $ECR_REPOSITORY:latest .
        docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
